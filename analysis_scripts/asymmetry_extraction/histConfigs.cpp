#include "common_vars.h"
#include "TMath.h" 

std::map<std::string, HistConfig> histConfigs = {
      {"runnum", {1000, 4000, 5000}},
      {"Delta_eta", {33, -3, 3}},
      {"mc_Delta_eta", {33, -3, 3}},
      {"Delta_phi", {33, 0, 2*TMath::Pi()}},
      {"mc_Delta_phi", {33, 0, 2*TMath::Pi()}},
      {"Delta_phi12", {33, 0, 2*TMath::Pi()}},
      {"mc_Delta_phi12", {33, 0, 2*TMath::Pi()}},
      {"Delta_phi13", {33, 0, 2*TMath::Pi()}},
      {"mc_Delta_phi13", {33, 0, 2*TMath::Pi()}},
      {"Delta_phi23", {33, 0, 2*TMath::Pi()}},
      {"mc_Delta_phi23", {33, 0, 2*TMath::Pi()}},
      {"DepA", {33, 0, 1}},
      {"mc_DepA", {33, 0, 1}},
      {"DepB", {33, 0, 1}},
      {"mc_DepB", {33, 0, 1}},
      {"DepC", {33, 0, 1}},
      {"mc_DepC", {33, 0, 1}},
      {"DepV", {33, 0, 2}},
      {"mc_DepV", {33, 0, 2}},
      {"DepW", {33, 0, 1}},
      {"mc_DepW", {33, 0, 1}},
      {"e_p", {33, 1, 9}},
      {"mc_e_p", {33, 1, 9}},
      {"e_phi", {33, 0, 2 * TMath::Pi()}},
      {"mc_e_phi", {33, 0, 2 * TMath::Pi()}},
      {"eta", {33, -3, 3}},
      {"mc_eta", {33, -3, 3}},
      {"eta1", {33, -3, 3}},
      {"mc_eta1", {33, -3, 3}},
      {"eta2", {33, -3, 3}},
      {"mc_eta2", {33, -3, 3}},
      {"eta3", {33, -3, 3}},
      {"mc_eta3", {33, -3, 3}},
      {"eta12", {33, -3, 3}},
      {"mc_eta12", {33, -3, 3}},
      {"eta13", {33, -3, 3}},
      {"mc_eta13", {33, -3, 3}},
      {"eta23", {33, -3, 3}},
      {"mc_eta23", {33, -3, 3}},
      {"eta1_gN", {33, -3, 3}},
      {"mc_eta1_gN", {33, -3, 3}},
      {"eta2_gN", {33, -3, 3}},
      {"mc_eta2_gN", {33, -3, 3}},
      {"e_theta", {33, 0, 2 * TMath::Pi() / 180 * 30}}, // Convert degree to radian
      {"mc_e_theta", {33, 0, 2 * TMath::Pi() / 180 * 30}}, // Convert degree to radian
      {"evnum", {33, 0, 0}},
      {"mc_evnum", {33, 0, 0}},
      {"helicity", {2, -2, 2}},
      {"Mh", {33, 0., 2.5}},
      {"mc_Mh", {33, 0., 2.5}},
      {"Mh12", {33, 0., 2.5}},
      {"mc_Mh12", {33, 0., 2.5}},
      {"Mh13", {33, 0., 2.5}},
      {"mc_Mh13", {33, 0., 2.5}},
      {"Mh23", {33, 0., 2.5}},
      {"mc_Mh23", {33, 0., 2.5}},
      {"Mx", {33, 0, 3.}},
      {"mc_Mx", {33, 0, 3.}},
      {"Mx1", {33, 0.5, 4.}},
      {"mc_Mx1", {33, 0.5, 4.}},
      {"Mx2", {33, 0, 3}},
      {"mc_Mx2", {33, 0, 3}},
      {"Mx3", {33, 0, 4}},
      {"mc_Mx3", {33, 0, 4}},
      {"Mx12", {33, 0, 4.}},
      {"mc_Mx12", {33, 0, 4.}},
      {"Mx13", {33, 0, 4.}},
      {"mc_Mx13", {33, 0, 4.}},
      {"Mx23", {33, 0, 4.}},
      {"mc_Mx23", {33, 0, 4.}},
      {"phi", {33, 0, 2 * TMath::Pi()}},
      {"mc_phi", {33, 0, 2 * TMath::Pi()}},
      {"phi1", {33, 0, 2 * TMath::Pi()}},
      {"mc_phi1", {33, 0, 2 * TMath::Pi()}},
      {"phi2", {33, 0, 2 * TMath::Pi()}},
      {"mc_phi2", {33, 0, 2 * TMath::Pi()}},
      {"phi3", {33, 0, 2 * TMath::Pi()}},
      {"mc_phi3", {33, 0, 2 * TMath::Pi()}},
      {"phih", {33, 0, 2 * TMath::Pi()}},
      {"mc_phih", {33, 0, 2 * TMath::Pi()}},
      {"phiR", {33, 0, 2 * TMath::Pi()}},
      {"mc_phiR", {33, 0, 2 * TMath::Pi()}},
      {"p_p", {33, 0, 6}},
      {"mc_p_p", {33, 0, 6}},
      {"p1_p", {33, 0, 6}},
      {"mc_p1_p", {33, 0, 6}},
      {"p2_p", {33, 0, 6}},
      {"mc_p2_p", {33, 0, 6}},
      {"p3_p", {33, 0, 6}},
      {"mc_p3_p", {33, 0, 6}},
      {"p_phi", {33, 0, 2 * TMath::Pi()}},
      {"mc_p_phi", {33, 0, 2 * TMath::Pi()}},
      {"p1_phi", {33, 0, 2 * TMath::Pi()}},
      {"mc_p1_phi", {33, 0, 2 * TMath::Pi()}},
      {"p2_phi", {33, 0, 2 * TMath::Pi()}},
      {"mc_p2_phi", {33, 0, 2 * TMath::Pi()}},
      {"p3_phi", {33, 0, 2 * TMath::Pi()}},
      {"mc_p3_phi", {33, 0, 2 * TMath::Pi()}},
      {"pT", {33, 0, 1.2}},
      {"mc_pT", {33, 0, 1.2}},
      {"pT1", {33, 0, 1.2}},
      {"mc_pT1", {33, 0, 1.2}},
      {"pT2", {33, 0, 1.2}},
      {"mc_pT2", {33, 0, 1.2}},
      {"pTpT", {33, 0, 1.0}},
      {"mc_pTpT", {33, 0, 1.0}},
      {"p_theta", {33, 0, 2 * TMath::Pi() / 180 * 30}}, // Convert degree to radian
      {"mc_p_theta", {33, 0, 2 * TMath::Pi() / 180 * 30}}, // Convert degree to radian
      {"p1_theta", {33, 0, 2 * TMath::Pi() / 180 * 30}}, // Convert degree to radian
      {"mc_p1_theta", {33, 0, 2 * TMath::Pi() / 180 * 30}}, // Convert degree to radian
      {"p2_theta", {33, 0, 2 * TMath::Pi() / 180 * 30}}, // Convert degree to radian
      {"mc_p2_theta", {33, 0, 2 * TMath::Pi() / 180 * 30}}, // Convert degree to radian
      {"p3_theta", {33, 0, 2 * TMath::Pi() / 180 * 30}}, // Convert degree to radian
      {"mc_p3_theta", {33, 0, 2 * TMath::Pi() / 180 * 30}}, // Convert degree to radian
      {"Q2", {33, 0, 9}},
      {"mc_Q2", {33, 0, 9}},
      {"runnum", {33, 0, 0}},
      {"theta", {33, 0, TMath::Pi()}},
      {"mc_theta", {33, 0, TMath::Pi()}},
      {"t", {33, -12, 1}},
      {"mc_t", {33, -12, 1}},
      {"t1", {33, -12, 1}},
      {"mc_t1", {33, -12, 1}},
      {"t2", {33, -12, 1}},
      {"mc_t2", {33, -12, 1}},
      {"tmin", {33, -0.5, 0}},
      {"mc_tmin", {33, -0.5, 0}},
      {"vz_e", {33, -15, 15}},
      {"mc_vz_e", {33, -15, 15}},
      {"vz_p", {33, -15, 15}},
      {"mc_vz_p", {33, -15, 15}},
      {"vz_p1", {33, -15, 15}},
      {"mc_vz_p1", {33, -15, 15}},
      {"vz_p2", {33, -15, 15}},
      {"mc_vz_p2", {33, -15, 15}},
      {"vz_p3", {33, -15, 15}},
      {"mc_vz_p3", {33, -15, 15}},
      {"W", {33, 2, 4}},
      {"mc_W", {33, 2, 4}},
      {"x", {33, 0, 0.8}},
      {"mc_x", {33, 0, 0.8}},
      {"xF", {33, -1, 1}},
      {"mc_xF", {33, -1, 1}},
      {"xF1", {33, -1, 1}},
      {"mc_xF1", {33, -1, 1}},
      {"xF2", {33, -1, 1}},
      {"mc_xF2", {33, -1, 1}},
      {"xF3", {33, -1, 1}},
      {"mc_xF3", {33, -1, 1}},
      {"xF12", {33, -1, 1}},
      {"mc_xF12", {33, -1, 1}},
      {"xF13", {33, -1, 1}},
      {"mc_xF13", {33, -1, 1}},
      {"xF23", {33, -1, 1}},
      {"mc_xF23", {33, -1, 1}},
      {"y", {33, 0.0, 1.00}},
      {"mc_y", {33, 0.0, 1.00}},
      {"z", {33, 0, 1}},
      {"mc_z", {33, 0, 1}},
      {"z1", {33, 0, 1}},
      {"mc_z1", {33, 0, 1}},
      {"z2", {33, 0, 1}},
      {"mc_z2", {33, 0, 1}},
      {"Mh", {33, 0, 2}},
      {"mc_Mh", {33, 0, 2}},
      {"zeta", {33, 0.0, 1}},
      {"mc_zeta", {33, 0.0, 1}},
      {"zeta1", {33, 0.0, 1}},
      {"mc_zeta1", {33, 0.0, 1}},
      {"zeta2", {33, 0.0, 1}},
      {"mc_zet2", {33, 0.0, 1}}
    };